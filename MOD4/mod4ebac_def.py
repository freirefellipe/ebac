# -*- coding: utf-8 -*-
"""MOD4ebac-def.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UuS6HvIcwNdAF8yxuPvFPax3Dgwf5_5d

# Trabalhando com funções **def**:
"""

def Rendimento(investimento: float, meses: int, taxa: float):

  for i in range(meses): # o parâmetro de contagem será o tempo em questão
    print(round(investimento, 2))
    rendimento_mensal = investimento * taxa
    investimento += rendimento_mensal

  print(round(investimento, 2))

investimento, meses, taxa = float(input('Qual será o investimento inicial? R$')), int(input('Quantos meses de rendimento você estima? ')), float(input('Qual a taxa de rendimento mensal que se aplica? '))

Rendimento(investimento, meses, taxa)

"""Outro exemplo:"""

def minusculo(palavra: str) -> str: # É importante informar o tipo de dado a receber e a retornar (indicado pela seta)
  palavra = palavra.lower()
  return palavra

print(minusculo(palavra='FELLIPE'))

with open (file='emails.csv', mode='r', encoding='utf8') as localfile:
  line = localfile.readline().split(';')
  while line:
    if len(line) < 2: # avoids the except when there's no next line.
      break # breaks the loop, carrying on with the code.
    email = line[0]
    username = email.split('@')[0]
    domain = email.split('@')[1]
    phone = line[1]
    if domain == 'gmail.com':
      print(f'{username.capitalize()} está no domínio {domain}, nº de telefone {phone}')
    line = localfile.readline().split(';')

print('Programa finalizado')

"""Outra forma de se fazer é:"""

with open (file='emails.csv', mode='r', encoding='utf8') as locale:
  for linea in locale:
      emails = list(map(lambda linea : linea.split(';')[0], locale))
      print(emails)
      usernames = list(map(lambda email : email.split('@')[0], emails))
      print(usernames)

"""Ou diretamente:"""

with open (file='emails.csv', mode='r', encoding='utf8') as locale:
  for linea in locale:
      usernames = list(map(lambda email : email.split('@')[0], list(map(lambda linea : linea.split(';')[0], locale))))
      print(usernames)

"""Sugestão do GOOGLE/Gemini:"""

with open (file='emails.csv', mode='r', encoding='utf8') as locale:
  for linea in locale: # esse método sem lambda
    linea = linea.strip().split(';')# sobre a linha que vai ser lida
    if len(linea) >= 2: # condição para se não houver linha não estourar exceção com relação a index
      email = linea[0]
      username, domain = email.split('@') # cada variável vai ficar com um elemento dos dois da var 'email'
      phone = linea[1]
    else:
      pass

"""Função com parâmetro:"""

def csv_it (name: str, header: str, conteudo: list) -> bool:
  try:
    with open(file=name, mode='w', encoding='utf8') as local:
      local.write(header + '\n')
      for ogni in conteudo:
        local.write(ogni + '\n') # o prof. André Sanchez antes escreve o conteúdo da linha em uma variável e a insere entre os parênteses.
    return True
  except Exception as err:
    print(err)
    return False

csv_it(name='usernames.csv', header='usernames', conteudo=usernames)

"""Outra forma de se fazer, utilizando **input**:"""

name = str(input('Nome do documento (sem incluir o formato): ')) + str('.csv')
header = str(input('Nome do cabeçalho: ')).lower()
csv_it(name, header, emails)

"""---

# Documentos utilizados na atividade:
"""

# Commented out IPython magic to ensure Python compatibility.
# %%writefile emails.csv
# aragorn@gmail.com;82 192839586
# obi-wan@outlook.com;82 859487756
# inara@gmail.com;83 475669998
# anabia@outlook.com;87 226480765
# lanister@outlook.com;81 887493824
# kobaiashi@gmail.com;82 339098877
# katsumoto@outlook.com;84 182236786